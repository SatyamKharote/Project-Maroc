# -*- coding: utf-8 -*-
"""weight_predict.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YjknKgW8b723kz4PLibINinCpN4QNnuJ
"""

# !pip install matplotlib
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import warnings
import joblib
warnings.filterwarnings('ignore')

df = pd.read_csv('/content/weight-height.csv')
df

df.info()

df.shape #10000 row and 3 column

plt.scatter(df['Height'],df['Weight'])
plt.xlabel('Height')
plt.ylabel('Weight')
# plt.show()

x = df.iloc[:,[1]] #Height
y = df.iloc[:,2] #Weight

x_train, x_test,y_train,y_test = train_test_split(x,y,test_size=0.2)

regressor = LinearRegression()
regressor.fit(x_train,y_train)

predicted_weight = regressor.predict(x_test)

plt.scatter(x_test,y_test,color = 'green')

plt.plot(x_test,predicted_weight,color = 'blue')

plt.title('Height vs Weight - Test Values')
plt.xlabel('Height')
plt.ylabel('Weight')
# plt.show()

from sklearn.metrics import mean_squared_error

RMSE_test = (np.sqrt(mean_squared_error(y_test,predicted_weight)))

print("RMSE TestData = ",str(RMSE_test)) #Root mean square error (RMSE)
print('-'*50)
print("RSquared value on test: ",regressor.score(x_test,y_test))

regressor.predict([[55]])

filename = 'weightloss.sav'
joblib.dump(regressor,filename)